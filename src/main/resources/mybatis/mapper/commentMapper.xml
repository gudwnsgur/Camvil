<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.camvil.repository.CommentRepository">
    <resultMap id="commentMap" type="com.app.camvil.dto.CommentDTO">

        <result column="comment_id" property="commentId"/>
        <result column="comment_content" property="commentContent"/>
        <result column="board_id" property="boardId"/>
        <result column="user_id" property="userId"/>
        <result column="post_date" property="postDate"/>
        <result column="update_date" property="updateDate"/>

    </resultMap>
    <select id="findLastCommentId" resultMap="commentMap">
        SELECT * FROM comments ORDER BY post_date DESC LIMIT 1;
    </select>

    <select id="findCommentByCommentId" resultMap="commentMap">
        SELECT * FROM comments WHERE comment_id = '${commentId}';
    </select>
    <select id="findCommentsByBoardId" resultMap="commentMap">
        SELECT * FROM comments WHERE board_id = '${boardId}';
    </select>
    <select id="findCommentsByUserId" resultMap="commentMap">
        SELECT * FROM comments WHERE user_id = '${userId}';
    </select>
    <select id="countCommentsByUserId" resultType="com.app.camvil.dto.CommentCountDTO">
        SELECT b.board_id as boardId, count(*) as commentCnt
        FROM comments as cm, boards as b
        WHERE cm.board_id = b.board_id AND cm.user_id = '${userId}'
        GROUP BY b.board_id;
    </select>
    <select id="getCommentsByBoardId" resultType="com.app.camvil.dto.responsedto.CommentDetailResponseDTO">
        SELECT u.user_id as userId, cm.comment_id as commentId,
        u.user_name as userName, u.user_image_path as userImagePath,
        cm.comment_content as commentContent, cm.post_date as postDate
        FROM users as u, comments as cm
        WHERE cm.board_id = '${boardId}' AND u.user_id = cm.user_id
        GROUP BY cm.comment_id
        ORDER BY cm.post_date ASC;
    </select>
    <select id="getTwoCommentsByBoardId" resultType="com.app.camvil.dto.responsedto.CommentDetailResponseDTO">
        SELECT u.user_id as userId, cm.comment_id as commentId,
        u.user_name as userName, u.user_image_path as userImagePath,
        cm.comment_content as commentContent, cm.post_date as postDate
        FROM users as u, comments as cm
        WHERE cm.board_id = '${boardId}' AND u.user_id = cm.user_id
        GROUP BY cm.comment_id
        ORDER BY cm.post_date desc LIMIT 2;
    </select>
    <insert id="insertComment" parameterType="CommentDTO">
        INSERT INTO comments(comment_content, user_id, board_id, post_date)
        VALUES ('${commentContent}', '${userId}', '${boardId}', DATE_ADD(now(), INTERVAL 9 HOUR));
    </insert>

    <update id="updateComment" parameterType="CommentDTO">
        UPDATE comments SET comment_content = '${commentContent}', update_date = DATE_ADD(now(), INTERVAL 9 HOUR)
        WHERE comment_id = '${commentId}';
    </update>

    <delete id="deleteCommentByCommentId" parameterType="CommentDTO">
        DELETE FROM comments WHERE comment_id = '${commentId}';
    </delete>

    <delete id="deleteCommentsByBoardId" parameterType="CommentDTO">
        DELETE FROM comments WHERE board_id = '${boardId}';
    </delete>
    <delete id="deleteCommentsByUserId" parameterType="CommentDTO">
        DELETE FROM comments WHERE user_id = '${userId}';
    </delete>
</mapper>